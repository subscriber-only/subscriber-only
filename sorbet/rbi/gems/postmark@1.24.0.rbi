# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `postmark` gem.
# Please instead update this file by running `bin/tapioca gem postmark`.

# source://postmark//lib/postmark/message_extensions/mail.rb#1
module Mail
  class << self
    # source://mail/2.8.1/lib/mail/mail.rb#163
    def all(*args, &block); end

    # source://mail/2.8.1/lib/mail/mail.rb#183
    def connection(&block); end

    # source://mail/2.8.1/lib/mail/mail.rb#98
    def defaults(&block); end

    # source://mail/2.8.1/lib/mail/mail.rb#174
    def delete_all(*args, &block); end

    # source://mail/2.8.1/lib/mail/mail.rb#131
    def deliver(*args, &block); end

    # source://mail/2.8.1/lib/mail/mail.rb#103
    def delivery_method; end

    # source://mail/2.8.1/lib/mail.rb#35
    def eager_autoload!; end

    # source://mail/2.8.1/lib/mail/mail.rb#139
    def find(*args, &block); end

    # source://mail/2.8.1/lib/mail/mail.rb#145
    def find_and_delete(*args, &block); end

    # source://mail/2.8.1/lib/mail/mail.rb#151
    def first(*args, &block); end

    # source://actionmailbox/7.0.4.3/lib/action_mailbox/mail_ext/from_source.rb#4
    def from_source(source); end

    # source://mail/2.8.1/lib/mail/mail.rb#233
    def inform_interceptors(mail); end

    # source://mail/2.8.1/lib/mail/mail.rb#227
    def inform_observers(mail); end

    # source://mail/2.8.1/lib/mail/mail.rb#157
    def last(*args, &block); end

    # source://mail/2.8.1/lib/mail/mail.rb#50
    def new(*args, &block); end

    # source://mail/2.8.1/lib/mail/mail.rb#243
    def random_tag; end

    # source://mail/2.8.1/lib/mail/mail.rb#168
    def read(filename); end

    # source://mail/2.8.1/lib/mail/mail.rb#179
    def read_from_string(mail_as_string); end

    # source://mail/2.8.1/lib/mail.rb#23
    def register_autoload(name, path); end

    # source://mail/2.8.1/lib/mail/mail.rb#215
    def register_interceptor(interceptor); end

    # source://mail/2.8.1/lib/mail/mail.rb#196
    def register_observer(observer); end

    # source://mail/2.8.1/lib/mail/mail.rb#108
    def retriever_method; end

    # source://mail/2.8.1/lib/mail/mail.rb#252
    def something_random; end

    # source://mail/2.8.1/lib/mail/mail.rb#256
    def uniq; end

    # source://mail/2.8.1/lib/mail/mail.rb#223
    def unregister_interceptor(interceptor); end

    # source://mail/2.8.1/lib/mail/mail.rb#204
    def unregister_observer(observer); end
  end
end

# source://postmark//lib/postmark/message_extensions/mail.rb#2
class Mail::Message
  # source://mail/2.8.1/lib/mail/message.rb#107
  def initialize(*args, &block); end

  # source://mail/2.8.1/lib/mail/message.rb#334
  def <=>(other); end

  # source://mail/2.8.1/lib/mail/message.rb#373
  def ==(other); end

  # source://mail/2.8.1/lib/mail/message.rb#1334
  def [](name); end

  # source://mail/2.8.1/lib/mail/message.rb#1316
  def []=(name, value); end

  # source://mail/2.8.1/lib/mail/message.rb#1558
  def action; end

  # source://mail/2.8.1/lib/mail/message.rb#1472
  def add_charset; end

  # source://mail/2.8.1/lib/mail/message.rb#1487
  def add_content_transfer_encoding; end

  # source://mail/2.8.1/lib/mail/message.rb#1465
  def add_content_type; end

  # source://mail/2.8.1/lib/mail/message.rb#1448
  def add_date(date_val = T.unsafe(nil)); end

  # source://mail/2.8.1/lib/mail/message.rb#1757
  def add_file(values); end

  # source://mail/2.8.1/lib/mail/message.rb#1438
  def add_message_id(msg_id_val = T.unsafe(nil)); end

  # source://mail/2.8.1/lib/mail/message.rb#1458
  def add_mime_version(ver_val = T.unsafe(nil)); end

  # source://mail/2.8.1/lib/mail/message.rb#1701
  def add_part(part); end

  # source://mail/2.8.1/lib/mail/message.rb#1927
  def all_parts; end

  # source://mail/2.8.1/lib/mail/message.rb#1918
  def attachment; end

  # source://mail/2.8.1/lib/mail/message.rb#1913
  def attachment?; end

  # source://mail/2.8.1/lib/mail/message.rb#1626
  def attachments; end

  # source://mail/2.8.1/lib/mail/message.rb#500
  def bcc(val = T.unsafe(nil)); end

  # source://mail/2.8.1/lib/mail/message.rb#512
  def bcc=(val); end

  # source://actionmailbox/7.0.4.3/lib/action_mailbox/mail_ext/addresses.rb#21
  def bcc_addresses; end

  # source://mail/2.8.1/lib/mail/message.rb#1306
  def bcc_addrs; end

  # source://mail/2.8.1/lib/mail/message.rb#1251
  def body(value = T.unsafe(nil)); end

  # source://mail/2.8.1/lib/mail/message.rb#1237
  def body=(value); end

  # source://mail/2.8.1/lib/mail/message.rb#1260
  def body_encoding(value = T.unsafe(nil)); end

  # source://mail/2.8.1/lib/mail/message.rb#1268
  def body_encoding=(value); end

  # source://postmark//lib/postmark/message_extensions/mail.rb#129
  def body_html; end

  # source://postmark//lib/postmark/message_extensions/mail.rb#137
  def body_text; end

  # source://mail/2.8.1/lib/mail/message.rb#1554
  def bounced?; end

  # source://mail/2.8.1/lib/mail/message.rb#1583
  def boundary; end

  # source://mail/2.8.1/lib/mail/message.rb#541
  def cc(val = T.unsafe(nil)); end

  # source://mail/2.8.1/lib/mail/message.rb#553
  def cc=(val); end

  # source://actionmailbox/7.0.4.3/lib/action_mailbox/mail_ext/addresses.rb#17
  def cc_addresses; end

  # source://mail/2.8.1/lib/mail/message.rb#1300
  def cc_addrs; end

  # source://mail/2.8.1/lib/mail/message.rb#1497
  def charset; end

  # source://mail/2.8.1/lib/mail/message.rb#1506
  def charset=(value); end

  # source://mail/2.8.1/lib/mail/message.rb#557
  def comments(val = T.unsafe(nil)); end

  # source://mail/2.8.1/lib/mail/message.rb#561
  def comments=(val); end

  # source://mail/2.8.1/lib/mail/message.rb#565
  def content_description(val = T.unsafe(nil)); end

  # source://mail/2.8.1/lib/mail/message.rb#569
  def content_description=(val); end

  # source://mail/2.8.1/lib/mail/message.rb#573
  def content_disposition(val = T.unsafe(nil)); end

  # source://mail/2.8.1/lib/mail/message.rb#577
  def content_disposition=(val); end

  # source://mail/2.8.1/lib/mail/message.rb#581
  def content_id(val = T.unsafe(nil)); end

  # source://mail/2.8.1/lib/mail/message.rb#585
  def content_id=(val); end

  # source://mail/2.8.1/lib/mail/message.rb#589
  def content_location(val = T.unsafe(nil)); end

  # source://mail/2.8.1/lib/mail/message.rb#593
  def content_location=(val); end

  # source://mail/2.8.1/lib/mail/message.rb#597
  def content_transfer_encoding(val = T.unsafe(nil)); end

  # source://mail/2.8.1/lib/mail/message.rb#601
  def content_transfer_encoding=(val); end

  # source://mail/2.8.1/lib/mail/message.rb#605
  def content_type(val = T.unsafe(nil)); end

  # source://mail/2.8.1/lib/mail/message.rb#609
  def content_type=(val); end

  # source://mail/2.8.1/lib/mail/message.rb#1523
  def content_type_parameters; end

  # source://mail/2.8.1/lib/mail/message.rb#1773
  def convert_to_multipart; end

  # source://mail/2.8.1/lib/mail/message.rb#613
  def date(val = T.unsafe(nil)); end

  # source://mail/2.8.1/lib/mail/message.rb#617
  def date=(val); end

  # source://mail/2.8.1/lib/mail/message.rb#1907
  def decode_body; end

  # source://mail/2.8.1/lib/mail/message.rb#1886
  def decoded; end

  # source://mail/2.8.1/lib/mail/message.rb#1204
  def default(sym, val = T.unsafe(nil)); end

  # source://mail/2.8.1/lib/mail/message.rb#250
  def deliver; end

  # source://mail/2.8.1/lib/mail/message.rb#267
  def deliver!; end

  # Returns the value of attribute delivered.
  #
  # source://postmark//lib/postmark/message_extensions/mail.rb#4
  def delivered; end

  # Sets the attribute delivered
  #
  # @param value the value to set the attribute delivered to.
  #
  # source://postmark//lib/postmark/message_extensions/mail.rb#4
  def delivered=(_arg0); end

  # @return [Boolean]
  #
  # source://postmark//lib/postmark/message_extensions/mail.rb#6
  def delivered?; end

  # source://mail/2.8.1/lib/mail/message.rb#199
  def delivery_handler; end

  # source://mail/2.8.1/lib/mail/message.rb#199
  def delivery_handler=(_arg0); end

  # source://mail/2.8.1/lib/mail/message.rb#274
  def delivery_method(method = T.unsafe(nil), settings = T.unsafe(nil)); end

  # source://mail/2.8.1/lib/mail/message.rb#1543
  def delivery_status_part; end

  # source://mail/2.8.1/lib/mail/message.rb#1538
  def delivery_status_report?; end

  # source://mail/2.8.1/lib/mail/message.rb#1282
  def destinations; end

  # source://mail/2.8.1/lib/mail/message.rb#1570
  def diagnostic_code; end

  # source://mail/2.8.1/lib/mail/message.rb#1803
  def encoded; end

  # source://mail/2.8.1/lib/mail/message.rb#418
  def envelope_date; end

  # source://mail/2.8.1/lib/mail/message.rb#414
  def envelope_from; end

  # source://mail/2.8.1/lib/mail/message.rb#1566
  def error_status; end

  # source://mail/2.8.1/lib/mail/message.rb#471
  def errors; end

  # source://postmark//lib/postmark/message_extensions/mail.rb#147
  def export_attachments; end

  # source://postmark//lib/postmark/message_extensions/mail.rb#151
  def export_headers; end

  # source://mail/2.8.1/lib/mail/message.rb#1923
  def filename; end

  # source://mail/2.8.1/lib/mail/message.rb#1562
  def final_recipient; end

  # source://mail/2.8.1/lib/mail/message.rb#1931
  def find_first_mime_type(mt); end

  # source://mail/2.8.1/lib/mail/message.rb#658
  def from(val = T.unsafe(nil)); end

  # source://mail/2.8.1/lib/mail/message.rb#670
  def from=(val); end

  # source://actionmailbox/7.0.4.3/lib/action_mailbox/mail_ext/addresses.rb#5
  def from_address; end

  # source://mail/2.8.1/lib/mail/message.rb#1288
  def from_addrs; end

  # source://mail/2.8.1/lib/mail/message.rb#1630
  def has_attachments?; end

  # source://mail/2.8.1/lib/mail/message.rb#1423
  def has_charset?; end

  # source://mail/2.8.1/lib/mail/message.rb#1428
  def has_content_transfer_encoding?; end

  # source://mail/2.8.1/lib/mail/message.rb#1418
  def has_content_type?; end

  # source://mail/2.8.1/lib/mail/message.rb#1408
  def has_date?; end

  # source://mail/2.8.1/lib/mail/message.rb#1402
  def has_message_id?; end

  # source://mail/2.8.1/lib/mail/message.rb#1414
  def has_mime_version?; end

  # source://mail/2.8.1/lib/mail/message.rb#443
  def header(value = T.unsafe(nil)); end

  # source://mail/2.8.1/lib/mail/message.rb#428
  def header=(value); end

  # source://mail/2.8.1/lib/mail/message.rb#1396
  def header_fields; end

  # source://mail/2.8.1/lib/mail/message.rb#448
  def headers(hash = T.unsafe(nil)); end

  # @return [Boolean]
  #
  # source://postmark//lib/postmark/message_extensions/mail.rb#125
  def html?; end

  # source://mail/2.8.1/lib/mail/message.rb#1635
  def html_part(&block); end

  # source://mail/2.8.1/lib/mail/message.rb#1655
  def html_part=(msg); end

  # source://mail/2.8.1/lib/mail/message.rb#674
  def in_reply_to(val = T.unsafe(nil)); end

  # source://mail/2.8.1/lib/mail/message.rb#678
  def in_reply_to=(val); end

  # source://mail/2.8.1/lib/mail/message.rb#240
  def inform_interceptors; end

  # source://mail/2.8.1/lib/mail/message.rb#236
  def inform_observers; end

  # source://mail/2.8.1/lib/mail/message.rb#1873
  def inspect; end

  # source://mail/2.8.1/lib/mail/message.rb#1877
  def inspect_structure; end

  # source://mail/2.8.1/lib/mail/message.rb#1960
  def is_marked_for_delete?; end

  # source://mail/2.8.1/lib/mail/message.rb#682
  def keywords(val = T.unsafe(nil)); end

  # source://mail/2.8.1/lib/mail/message.rb#686
  def keywords=(val); end

  # source://mail/2.8.1/lib/mail/message.rb#1513
  def main_type; end

  # source://mail/2.8.1/lib/mail/message.rb#1947
  def mark_for_delete=(value = T.unsafe(nil)); end

  # source://mail/2.8.1/lib/mail/message.rb#703
  def message_id(val = T.unsafe(nil)); end

  # source://mail/2.8.1/lib/mail/message.rb#712
  def message_id=(val); end

  # source://postmark//lib/postmark/message_extensions/mail.rb#75
  def message_stream(val = T.unsafe(nil)); end

  # source://postmark//lib/postmark/message_extensions/mail.rb#80
  def message_stream=(val); end

  # source://postmark//lib/postmark/message_extensions/mail.rb#36
  def metadata(val = T.unsafe(nil)); end

  # source://postmark//lib/postmark/message_extensions/mail.rb#44
  def metadata=(val); end

  # source://mail/2.8.1/lib/mail/message.rb#1377
  def method_missing(name, *args, &block); end

  # source://mail/2.8.1/lib/mail/message.rb#1492
  def mime_type; end

  # source://mail/2.8.1/lib/mail/message.rb#729
  def mime_version(val = T.unsafe(nil)); end

  # source://mail/2.8.1/lib/mail/message.rb#739
  def mime_version=(val); end

  # source://mail/2.8.1/lib/mail/message.rb#1528
  def multipart?; end

  # source://mail/2.8.1/lib/mail/message.rb#1533
  def multipart_report?; end

  # source://mail/2.8.1/lib/mail/message.rb#1722
  def part(params = T.unsafe(nil)); end

  # source://mail/2.8.1/lib/mail/message.rb#1588
  def parts; end

  # source://mail/2.8.1/lib/mail/message.rb#223
  def perform_deliveries; end

  # source://mail/2.8.1/lib/mail/message.rb#223
  def perform_deliveries=(_arg0); end

  # source://postmark//lib/postmark/message_extensions/mail.rb#55
  def postmark_attachments; end

  # source://postmark//lib/postmark/message_extensions/mail.rb#48
  def postmark_attachments=(value); end

  # Returns the value of attribute postmark_response.
  #
  # source://postmark//lib/postmark/message_extensions/mail.rb#4
  def postmark_response; end

  # Sets the attribute postmark_response
  #
  # @param value the value to set the attribute postmark_response to.
  #
  # source://postmark//lib/postmark/message_extensions/mail.rb#4
  def postmark_response=(_arg0); end

  # @raise [::Postmark::Error]
  #
  # source://postmark//lib/postmark/message_extensions/mail.rb#88
  def prerender; end

  # source://mail/2.8.1/lib/mail/message.rb#230
  def raise_delivery_errors; end

  # source://mail/2.8.1/lib/mail/message.rb#230
  def raise_delivery_errors=(_arg0); end

  # source://mail/2.8.1/lib/mail/message.rb#410
  def raw_envelope; end

  # source://mail/2.8.1/lib/mail/message.rb#397
  def raw_source; end

  # source://mail/2.8.1/lib/mail/message.rb#1899
  def read; end

  # source://mail/2.8.1/lib/mail/message.rb#1791
  def ready_to_send!; end

  # source://mail/2.8.1/lib/mail/message.rb#743
  def received(val = T.unsafe(nil)); end

  # source://mail/2.8.1/lib/mail/message.rb#751
  def received=(val); end

  # source://actionmailbox/7.0.4.3/lib/action_mailbox/mail_ext/recipients.rb#5
  def recipients; end

  # source://actionmailbox/7.0.4.3/lib/action_mailbox/mail_ext/addresses.rb#9
  def recipients_addresses; end

  # source://mail/2.8.1/lib/mail/message.rb#755
  def references(val = T.unsafe(nil)); end

  # source://mail/2.8.1/lib/mail/message.rb#759
  def references=(val); end

  # source://mail/2.8.1/lib/mail/message.rb#1574
  def remote_mta; end

  # source://mail/2.8.1/lib/mail/message.rb#282
  def reply(*args, &block); end

  # source://mail/2.8.1/lib/mail/message.rb#788
  def reply_to(val = T.unsafe(nil)); end

  # source://mail/2.8.1/lib/mail/message.rb#800
  def reply_to=(val); end

  # source://mail/2.8.1/lib/mail/message.rb#829
  def resent_bcc(val = T.unsafe(nil)); end

  # source://mail/2.8.1/lib/mail/message.rb#841
  def resent_bcc=(val); end

  # source://mail/2.8.1/lib/mail/message.rb#870
  def resent_cc(val = T.unsafe(nil)); end

  # source://mail/2.8.1/lib/mail/message.rb#882
  def resent_cc=(val); end

  # source://mail/2.8.1/lib/mail/message.rb#886
  def resent_date(val = T.unsafe(nil)); end

  # source://mail/2.8.1/lib/mail/message.rb#890
  def resent_date=(val); end

  # source://mail/2.8.1/lib/mail/message.rb#919
  def resent_from(val = T.unsafe(nil)); end

  # source://mail/2.8.1/lib/mail/message.rb#931
  def resent_from=(val); end

  # source://mail/2.8.1/lib/mail/message.rb#935
  def resent_message_id(val = T.unsafe(nil)); end

  # source://mail/2.8.1/lib/mail/message.rb#939
  def resent_message_id=(val); end

  # source://mail/2.8.1/lib/mail/message.rb#958
  def resent_sender(val = T.unsafe(nil)); end

  # source://mail/2.8.1/lib/mail/message.rb#968
  def resent_sender=(val); end

  # source://mail/2.8.1/lib/mail/message.rb#997
  def resent_to(val = T.unsafe(nil)); end

  # source://mail/2.8.1/lib/mail/message.rb#1009
  def resent_to=(val); end

  # source://mail/2.8.1/lib/mail/message.rb#1578
  def retryable?; end

  # source://mail/2.8.1/lib/mail/message.rb#1014
  def return_path(val = T.unsafe(nil)); end

  # source://mail/2.8.1/lib/mail/message.rb#1019
  def return_path=(val); end

  # source://mail/2.8.1/lib/mail/message.rb#1037
  def sender(val = T.unsafe(nil)); end

  # source://mail/2.8.1/lib/mail/message.rb#1047
  def sender=(val); end

  # source://mail/2.8.1/lib/mail/message.rb#402
  def set_envelope(val); end

  # source://mail/2.8.1/lib/mail/message.rb#1939
  def skip_deletion; end

  # source://mail/2.8.1/lib/mail/message.rb#1067
  def smtp_envelope_from(val = T.unsafe(nil)); end

  # source://mail/2.8.1/lib/mail/message.rb#1081
  def smtp_envelope_from=(val); end

  # source://mail/2.8.1/lib/mail/message.rb#1100
  def smtp_envelope_to(val = T.unsafe(nil)); end

  # source://mail/2.8.1/lib/mail/message.rb#1117
  def smtp_envelope_to=(val); end

  # source://mail/2.8.1/lib/mail/message.rb#1518
  def sub_type; end

  # source://mail/2.8.1/lib/mail/message.rb#1142
  def subject(val = T.unsafe(nil)); end

  # source://mail/2.8.1/lib/mail/message.rb#1152
  def subject=(val); end

  # source://postmark//lib/postmark/message_extensions/mail.rb#10
  def tag(val = T.unsafe(nil)); end

  # source://postmark//lib/postmark/message_extensions/mail.rb#14
  def tag=(val); end

  # source://postmark//lib/postmark/message_extensions/mail.rb#64
  def template_alias(val = T.unsafe(nil)); end

  # source://postmark//lib/postmark/message_extensions/mail.rb#70
  def template_model(model = T.unsafe(nil)); end

  # Sets the attribute template_model
  #
  # @param value the value to set the attribute template_model to.
  #
  # source://postmark//lib/postmark/message_extensions/mail.rb#69
  def template_model=(_arg0); end

  # @return [Boolean]
  #
  # source://postmark//lib/postmark/message_extensions/mail.rb#84
  def templated?; end

  # @return [Boolean]
  #
  # source://postmark//lib/postmark/message_extensions/mail.rb#117
  def text?; end

  # source://mail/2.8.1/lib/mail/message.rb#1644
  def text_part(&block); end

  # source://mail/2.8.1/lib/mail/message.rb#1679
  def text_part=(msg); end

  # source://mail/2.8.1/lib/mail/message.rb#1181
  def to(val = T.unsafe(nil)); end

  # source://mail/2.8.1/lib/mail/message.rb#1193
  def to=(val); end

  # source://actionmailbox/7.0.4.3/lib/action_mailbox/mail_ext/addresses.rb#13
  def to_addresses; end

  # source://mail/2.8.1/lib/mail/message.rb#1294
  def to_addrs; end

  # source://postmark//lib/postmark/message_extensions/mail.rb#161
  def to_postmark_hash; end

  # source://mail/2.8.1/lib/mail/message.rb#1869
  def to_s; end

  # source://mail/2.8.1/lib/mail/message.rb#1823
  def to_yaml(opts = T.unsafe(nil)); end

  # source://postmark//lib/postmark/message_extensions/mail.rb#18
  def track_links(val = T.unsafe(nil)); end

  # source://postmark//lib/postmark/message_extensions/mail.rb#23
  def track_links=(val); end

  # source://postmark//lib/postmark/message_extensions/mail.rb#27
  def track_opens(val = T.unsafe(nil)); end

  # source://postmark//lib/postmark/message_extensions/mail.rb#32
  def track_opens=(val); end

  # source://mail/2.8.1/lib/mail/message.rb#621
  def transport_encoding(val = T.unsafe(nil)); end

  # source://mail/2.8.1/lib/mail/message.rb#629
  def transport_encoding=(val); end

  # source://mail/2.8.1/lib/mail/message.rb#1811
  def without_attachments!; end

  # source://actionmailbox/7.0.4.3/lib/action_mailbox/mail_ext/addresses.rb#25
  def x_original_to_addresses; end

  protected

  # source://postmark//lib/postmark/message_extensions/mail.rb#172
  def export_native_attachments; end

  # source://postmark//lib/postmark/message_extensions/mail.rb#168
  def pack_attachment_data(data); end

  # source://postmark//lib/postmark/message_extensions/mail.rb#183
  def reserved_headers; end

  private

  # source://mail/2.8.1/lib/mail/message.rb#2067
  def add_boundary; end

  # source://mail/2.8.1/lib/mail/message.rb#2032
  def add_encoding_to_body; end

  # source://mail/2.8.1/lib/mail/message.rb#2062
  def add_multipart_alternate_header; end

  # source://mail/2.8.1/lib/mail/message.rb#2079
  def add_multipart_mixed_header; end

  # source://mail/2.8.1/lib/mail/message.rb#2048
  def add_required_fields; end

  # source://mail/2.8.1/lib/mail/message.rb#2056
  def add_required_message_fields; end

  # source://mail/2.8.1/lib/mail/message.rb#2025
  def allowed_encodings; end

  # source://mail/2.8.1/lib/mail/message.rb#1990
  def body_lazy(value); end

  # source://mail/2.8.1/lib/mail/message.rb#2152
  def decode_body_as_text; end

  # source://mail/2.8.1/lib/mail/message.rb#2142
  def do_delivery; end

  # source://mail/2.8.1/lib/mail/message.rb#2124
  def find_attachment; end

  # source://mail/2.8.1/lib/mail/message.rb#2038
  def identify_and_set_transfer_encoding; end

  # source://mail/2.8.1/lib/mail/message.rb#2086
  def init_with_hash(hash); end

  # source://mail/2.8.1/lib/mail/message.rb#2116
  def init_with_string(string); end

  # source://mail/2.8.1/lib/mail/message.rb#384
  def initialize_copy(original); end

  # source://mail/2.8.1/lib/mail/message.rb#1979
  def parse_message; end

  # source://mail/2.8.1/lib/mail/message.rb#2005
  def process_body_raw; end

  # source://mail/2.8.1/lib/mail/message.rb#1985
  def raw_source=(value); end

  # source://mail/2.8.1/lib/mail/message.rb#2021
  def separate_parts; end

  # source://mail/2.8.1/lib/mail/message.rb#2013
  def set_envelope_header; end

  class << self
    # source://mail/2.8.1/lib/mail/message.rb#232
    def default_charset; end

    # source://mail/2.8.1/lib/mail/message.rb#233
    def default_charset=(charset); end

    # source://mail/2.8.1/lib/mail/message.rb#1865
    def from_hash(hash); end

    # source://mail/2.8.1/lib/mail/message.rb#1843
    def from_yaml(str); end
  end
end

# source://postmark//lib/postmark/handlers/mail.rb#2
class Mail::Postmark
  # @return [Postmark] a new instance of Postmark
  #
  # source://postmark//lib/postmark/handlers/mail.rb#6
  def initialize(values); end

  # source://postmark//lib/postmark/handlers/mail.rb#24
  def api_client; end

  # source://postmark//lib/postmark/handlers/mail.rb#10
  def deliver!(mail); end

  # Returns the value of attribute settings.
  #
  # source://postmark//lib/postmark/handlers/mail.rb#4
  def settings; end

  # Sets the attribute settings
  #
  # @param value the value to set the attribute settings to.
  #
  # source://postmark//lib/postmark/handlers/mail.rb#4
  def settings=(_arg0); end
end

# assume activesupport is already loaded
#
# source://postmark//lib/postmark/version.rb#1
module Postmark
  extend ::Postmark

  # source://postmark//lib/postmark.rb#55
  def api_client; end

  # Sets the attribute api_client
  #
  # @param value the value to set the attribute api_client to.
  #
  # source://postmark//lib/postmark.rb#45
  def api_client=(_arg0); end

  # Returns the value of attribute api_token.
  def api_key; end

  # Sets the attribute api_token
  #
  # @param value the value to set the attribute api_token to.
  def api_key=(_arg0); end

  # Returns the value of attribute api_token.
  #
  # source://postmark//lib/postmark.rb#38
  def api_token; end

  # Sets the attribute api_token
  #
  # @param value the value to set the attribute api_token to.
  #
  # source://postmark//lib/postmark.rb#38
  def api_token=(_arg0); end

  # @yield [_self]
  # @yieldparam _self [Postmark] the object that the method was called on
  #
  # source://postmark//lib/postmark.rb#51
  def configure; end

  # source://postmark//lib/postmark.rb#74
  def deliver_message(*args); end

  # source://postmark//lib/postmark.rb#79
  def deliver_messages(*args); end

  # source://postmark//lib/postmark.rb#83
  def delivery_stats(*args); end

  # Returns the value of attribute host.
  #
  # source://postmark//lib/postmark.rb#38
  def host; end

  # Sets the attribute host
  #
  # @param value the value to set the attribute host to.
  #
  # source://postmark//lib/postmark.rb#38
  def host=(_arg0); end

  # Returns the value of attribute http_open_timeout.
  #
  # source://postmark//lib/postmark.rb#38
  def http_open_timeout; end

  # Sets the attribute http_open_timeout
  #
  # @param value the value to set the attribute http_open_timeout to.
  #
  # source://postmark//lib/postmark.rb#38
  def http_open_timeout=(_arg0); end

  # Returns the value of attribute http_read_timeout.
  #
  # source://postmark//lib/postmark.rb#38
  def http_read_timeout; end

  # Sets the attribute http_read_timeout
  #
  # @param value the value to set the attribute http_read_timeout to.
  #
  # source://postmark//lib/postmark.rb#38
  def http_read_timeout=(_arg0); end

  # Returns the value of attribute max_retries.
  #
  # source://postmark//lib/postmark.rb#38
  def max_retries; end

  # Sets the attribute max_retries
  #
  # @param value the value to set the attribute max_retries to.
  #
  # source://postmark//lib/postmark.rb#38
  def max_retries=(_arg0); end

  # Returns the value of attribute path_prefix.
  #
  # source://postmark//lib/postmark.rb#38
  def path_prefix; end

  # Sets the attribute path_prefix
  #
  # @param value the value to set the attribute path_prefix to.
  #
  # source://postmark//lib/postmark.rb#38
  def path_prefix=(_arg0); end

  # Returns the value of attribute port.
  #
  # source://postmark//lib/postmark.rb#38
  def port; end

  # Sets the attribute port
  #
  # @param value the value to set the attribute port to.
  #
  # source://postmark//lib/postmark.rb#38
  def port=(_arg0); end

  # Returns the value of attribute proxy_host.
  #
  # source://postmark//lib/postmark.rb#38
  def proxy_host; end

  # Sets the attribute proxy_host
  #
  # @param value the value to set the attribute proxy_host to.
  #
  # source://postmark//lib/postmark.rb#38
  def proxy_host=(_arg0); end

  # Returns the value of attribute proxy_pass.
  #
  # source://postmark//lib/postmark.rb#38
  def proxy_pass; end

  # Sets the attribute proxy_pass
  #
  # @param value the value to set the attribute proxy_pass to.
  #
  # source://postmark//lib/postmark.rb#38
  def proxy_pass=(_arg0); end

  # Returns the value of attribute proxy_port.
  #
  # source://postmark//lib/postmark.rb#38
  def proxy_port; end

  # Sets the attribute proxy_port
  #
  # @param value the value to set the attribute proxy_port to.
  #
  # source://postmark//lib/postmark.rb#38
  def proxy_port=(_arg0); end

  # Returns the value of attribute proxy_user.
  #
  # source://postmark//lib/postmark.rb#38
  def proxy_user; end

  # Sets the attribute proxy_user
  #
  # @param value the value to set the attribute proxy_user to.
  #
  # source://postmark//lib/postmark.rb#38
  def proxy_user=(_arg0); end

  # source://postmark//lib/postmark.rb#47
  def response_parser_class; end

  # Sets the attribute response_parser_class
  #
  # @param value the value to set the attribute response_parser_class to.
  #
  # source://postmark//lib/postmark.rb#45
  def response_parser_class=(_arg0); end

  # Returns the value of attribute secure.
  #
  # source://postmark//lib/postmark.rb#38
  def secure; end

  # Sets the attribute secure
  #
  # @param value the value to set the attribute secure to.
  #
  # source://postmark//lib/postmark.rb#38
  def secure=(_arg0); end

  # source://postmark//lib/postmark.rb#74
  def send_through_postmark(*args); end

  class << self
    # source://postmark//lib/postmark/deprecations.rb#2
    def const_missing(const_name); end
  end
end

# source://postmark//lib/postmark/account_api_client.rb#3
class Postmark::AccountApiClient < ::Postmark::Client
  # @return [AccountApiClient] a new instance of AccountApiClient
  #
  # source://postmark//lib/postmark/account_api_client.rb#5
  def initialize(api_token, options = T.unsafe(nil)); end

  # source://postmark//lib/postmark/account_api_client.rb#80
  def create_domain(attributes = T.unsafe(nil)); end

  # source://postmark//lib/postmark/account_api_client.rb#30
  def create_sender(attributes = T.unsafe(nil)); end

  # source://postmark//lib/postmark/account_api_client.rb#128
  def create_server(attributes = T.unsafe(nil)); end

  # source://postmark//lib/postmark/account_api_client.rb#30
  def create_signature(attributes = T.unsafe(nil)); end

  # source://postmark//lib/postmark/account_api_client.rb#108
  def delete_domain(id); end

  # source://postmark//lib/postmark/account_api_client.rb#59
  def delete_sender(id); end

  # source://postmark//lib/postmark/account_api_client.rb#138
  def delete_server(id); end

  # source://postmark//lib/postmark/account_api_client.rb#59
  def delete_signature(id); end

  # source://postmark//lib/postmark/account_api_client.rb#64
  def domains(options = T.unsafe(nil)); end

  # source://postmark//lib/postmark/account_api_client.rb#76
  def get_domain(id); end

  # source://postmark//lib/postmark/account_api_client.rb#68
  def get_domains(options = T.unsafe(nil)); end

  # source://postmark//lib/postmark/account_api_client.rb#72
  def get_domains_count(options = T.unsafe(nil)); end

  # source://postmark//lib/postmark/account_api_client.rb#25
  def get_sender(id); end

  # source://postmark//lib/postmark/account_api_client.rb#15
  def get_senders(options = T.unsafe(nil)); end

  # source://postmark//lib/postmark/account_api_client.rb#20
  def get_senders_count(options = T.unsafe(nil)); end

  # source://postmark//lib/postmark/account_api_client.rb#124
  def get_server(id); end

  # source://postmark//lib/postmark/account_api_client.rb#116
  def get_servers(options = T.unsafe(nil)); end

  # source://postmark//lib/postmark/account_api_client.rb#120
  def get_servers_count(options = T.unsafe(nil)); end

  # source://postmark//lib/postmark/account_api_client.rb#25
  def get_signature(id); end

  # source://postmark//lib/postmark/account_api_client.rb#15
  def get_signatures(options = T.unsafe(nil)); end

  # source://postmark//lib/postmark/account_api_client.rb#20
  def get_signatures_count(options = T.unsafe(nil)); end

  # source://postmark//lib/postmark/account_api_client.rb#142
  def push_templates(attributes = T.unsafe(nil)); end

  # source://postmark//lib/postmark/account_api_client.rb#54
  def request_new_sender_dkim(id); end

  # source://postmark//lib/postmark/account_api_client.rb#54
  def request_new_signature_dkim(id); end

  # source://postmark//lib/postmark/account_api_client.rb#44
  def resend_sender_confirmation(id); end

  # source://postmark//lib/postmark/account_api_client.rb#44
  def resend_signature_confirmation(id); end

  # source://postmark//lib/postmark/account_api_client.rb#104
  def rotate_domain_dkim(id); end

  # source://postmark//lib/postmark/account_api_client.rb#10
  def senders(options = T.unsafe(nil)); end

  # source://postmark//lib/postmark/account_api_client.rb#112
  def servers(options = T.unsafe(nil)); end

  # source://postmark//lib/postmark/account_api_client.rb#10
  def signatures(options = T.unsafe(nil)); end

  # source://postmark//lib/postmark/account_api_client.rb#86
  def update_domain(id, attributes = T.unsafe(nil)); end

  # source://postmark//lib/postmark/account_api_client.rb#37
  def update_sender(id, attributes = T.unsafe(nil)); end

  # source://postmark//lib/postmark/account_api_client.rb#133
  def update_server(id, attributes = T.unsafe(nil)); end

  # source://postmark//lib/postmark/account_api_client.rb#37
  def update_signature(id, attributes = T.unsafe(nil)); end

  # @return [Boolean]
  #
  # source://postmark//lib/postmark/account_api_client.rb#100
  def verified_domain_spf?(id); end

  # @return [Boolean]
  #
  # source://postmark//lib/postmark/account_api_client.rb#49
  def verified_sender_spf?(id); end

  # @return [Boolean]
  #
  # source://postmark//lib/postmark/account_api_client.rb#49
  def verified_signature_spf?(id); end

  # source://postmark//lib/postmark/account_api_client.rb#92
  def verify_domain_dkim(id); end

  # source://postmark//lib/postmark/account_api_client.rb#96
  def verify_domain_return_path(id); end
end

# source://postmark//lib/postmark/api_client.rb#2
class Postmark::ApiClient < ::Postmark::Client
  # @return [ApiClient] a new instance of ApiClient
  #
  # source://postmark//lib/postmark/api_client.rb#5
  def initialize(api_token, options = T.unsafe(nil)); end

  # source://postmark//lib/postmark/api_client.rb#147
  def activate_bounce(id); end

  # source://postmark//lib/postmark/api_client.rb#355
  def archive_message_stream(id); end

  # source://postmark//lib/postmark/api_client.rb#130
  def bounces(options = T.unsafe(nil)); end

  # source://postmark//lib/postmark/api_client.rb#155
  def clicks(options = T.unsafe(nil)); end

  # source://postmark//lib/postmark/api_client.rb#187
  def clicks_by_message_id(message_id, options = T.unsafe(nil)); end

  # source://postmark//lib/postmark/api_client.rb#345
  def create_message_stream(attributes = T.unsafe(nil)); end

  # source://postmark//lib/postmark/api_client.rb#368
  def create_suppressions(stream_id, email_addresses); end

  # source://postmark//lib/postmark/api_client.rb#238
  def create_template(attributes = T.unsafe(nil)); end

  # source://postmark//lib/postmark/api_client.rb#191
  def create_trigger(type, options); end

  # source://postmark//lib/postmark/api_client.rb#316
  def create_webhook(attributes = T.unsafe(nil)); end

  # source://postmark//lib/postmark/api_client.rb#373
  def delete_suppressions(stream_id, email_addresses); end

  # source://postmark//lib/postmark/api_client.rb#250
  def delete_template(id); end

  # source://postmark//lib/postmark/api_client.rb#201
  def delete_trigger(type, id); end

  # source://postmark//lib/postmark/api_client.rb#328
  def delete_webhook(id); end

  # source://postmark//lib/postmark/api_client.rb#11
  def deliver(message_hash = T.unsafe(nil)); end

  # source://postmark//lib/postmark/api_client.rb#19
  def deliver_in_batches(message_hashes); end

  # source://postmark//lib/postmark/api_client.rb#282
  def deliver_in_batches_with_templates(message_hashes); end

  # source://postmark//lib/postmark/api_client.rb#29
  def deliver_message(message); end

  # @raise [ArgumentError]
  #
  # source://postmark//lib/postmark/api_client.rb#45
  def deliver_message_with_template(message); end

  # source://postmark//lib/postmark/api_client.rb#58
  def deliver_messages(messages); end

  # source://postmark//lib/postmark/api_client.rb#78
  def deliver_messages_with_templates(messages); end

  # source://postmark//lib/postmark/api_client.rb#274
  def deliver_with_template(attributes = T.unsafe(nil)); end

  # source://postmark//lib/postmark/api_client.rb#97
  def delivery_stats; end

  # source://postmark//lib/postmark/api_client.rb#143
  def dump_bounce(id); end

  # source://postmark//lib/postmark/api_client.rb#126
  def dump_message(id, options = T.unsafe(nil)); end

  # source://postmark//lib/postmark/api_client.rb#363
  def dump_suppressions(stream_id, options = T.unsafe(nil)); end

  # source://postmark//lib/postmark/api_client.rb#139
  def get_bounce(id); end

  # source://postmark//lib/postmark/api_client.rb#134
  def get_bounces(options = T.unsafe(nil)); end

  # source://postmark//lib/postmark/api_client.rb#164
  def get_clicks(options = T.unsafe(nil)); end

  # source://postmark//lib/postmark/api_client.rb#176
  def get_clicks_by_message_id(message_id, options = T.unsafe(nil)); end

  # source://postmark//lib/postmark/api_client.rb#122
  def get_message(id, options = T.unsafe(nil)); end

  # source://postmark//lib/postmark/api_client.rb#341
  def get_message_stream(id); end

  # source://postmark//lib/postmark/api_client.rb#332
  def get_message_streams(options = T.unsafe(nil)); end

  # source://postmark//lib/postmark/api_client.rb#112
  def get_messages(options = T.unsafe(nil)); end

  # source://postmark//lib/postmark/api_client.rb#117
  def get_messages_count(options = T.unsafe(nil)); end

  # source://postmark//lib/postmark/api_client.rb#159
  def get_opens(options = T.unsafe(nil)); end

  # source://postmark//lib/postmark/api_client.rb#169
  def get_opens_by_message_id(message_id, options = T.unsafe(nil)); end

  # source://postmark//lib/postmark/api_client.rb#297
  def get_stats_counts(stat, options = T.unsafe(nil)); end

  # source://postmark//lib/postmark/api_client.rb#293
  def get_stats_totals(options = T.unsafe(nil)); end

  # source://postmark//lib/postmark/api_client.rb#234
  def get_template(id); end

  # source://postmark//lib/postmark/api_client.rb#226
  def get_templates(options = T.unsafe(nil)); end

  # source://postmark//lib/postmark/api_client.rb#197
  def get_trigger(type, id); end

  # source://postmark//lib/postmark/api_client.rb#206
  def get_triggers(type, options = T.unsafe(nil)); end

  # source://postmark//lib/postmark/api_client.rb#312
  def get_webhook(id); end

  # source://postmark//lib/postmark/api_client.rb#306
  def get_webhooks(options = T.unsafe(nil)); end

  # Returns the value of attribute max_batch_size.
  #
  # source://postmark//lib/postmark/api_client.rb#3
  def max_batch_size; end

  # Sets the attribute max_batch_size
  #
  # @param value the value to set the attribute max_batch_size to.
  #
  # source://postmark//lib/postmark/api_client.rb#3
  def max_batch_size=(_arg0); end

  # source://postmark//lib/postmark/api_client.rb#337
  def message_streams(options = T.unsafe(nil)); end

  # source://postmark//lib/postmark/api_client.rb#107
  def messages(options = T.unsafe(nil)); end

  # source://postmark//lib/postmark/api_client.rb#151
  def opens(options = T.unsafe(nil)); end

  # source://postmark//lib/postmark/api_client.rb#183
  def opens_by_message_id(message_id, options = T.unsafe(nil)); end

  # source://postmark//lib/postmark/api_client.rb#217
  def server_info; end

  # source://postmark//lib/postmark/api_client.rb#230
  def templates(options = T.unsafe(nil)); end

  # source://postmark//lib/postmark/api_client.rb#212
  def triggers(type, options = T.unsafe(nil)); end

  # source://postmark//lib/postmark/api_client.rb#359
  def unarchive_message_stream(id); end

  # source://postmark//lib/postmark/api_client.rb#350
  def update_message_stream(id, attributes); end

  # source://postmark//lib/postmark/api_client.rb#221
  def update_server_info(attributes = T.unsafe(nil)); end

  # source://postmark//lib/postmark/api_client.rb#244
  def update_template(id, attributes = T.unsafe(nil)); end

  # source://postmark//lib/postmark/api_client.rb#322
  def update_webhook(id, attributes = T.unsafe(nil)); end

  # source://postmark//lib/postmark/api_client.rb#254
  def validate_template(attributes = T.unsafe(nil)); end

  protected

  # source://postmark//lib/postmark/api_client.rb#400
  def extract_messages_path_and_params(options = T.unsafe(nil)); end

  # source://postmark//lib/postmark/api_client.rb#395
  def get_for_message(action, id, options = T.unsafe(nil)); end

  # source://postmark//lib/postmark/api_client.rb#380
  def in_batches(messages); end

  # source://postmark//lib/postmark/api_client.rb#388
  def update_message(message, response); end
end

# source://postmark//lib/postmark/error.rb#46
class Postmark::ApiInputError < ::Postmark::HttpServerError
  # @return [ApiInputError] a new instance of ApiInputError
  #
  # source://postmark//lib/postmark/error.rb#65
  def initialize(error_code = T.unsafe(nil), body = T.unsafe(nil), parsed_body = T.unsafe(nil)); end

  # Returns the value of attribute error_code.
  #
  # source://postmark//lib/postmark/error.rb#50
  def error_code; end

  # Sets the attribute error_code
  #
  # @param value the value to set the attribute error_code to.
  #
  # source://postmark//lib/postmark/error.rb#50
  def error_code=(_arg0); end

  # @return [Boolean]
  #
  # source://postmark//lib/postmark/error.rb#70
  def retry?; end

  class << self
    # source://postmark//lib/postmark/error.rb#52
    def build(body, parsed_body); end
  end
end

# source://postmark//lib/postmark/error.rb#47
Postmark::ApiInputError::INACTIVE_RECIPIENT = T.let(T.unsafe(nil), Integer)

# source://postmark//lib/postmark/error.rb#48
Postmark::ApiInputError::INVALID_EMAIL_REQUEST = T.let(T.unsafe(nil), Integer)

# source://postmark//lib/postmark/bounce.rb#4
class Postmark::Bounce
  # @return [Bounce] a new instance of Bounce
  #
  # source://postmark//lib/postmark/bounce.rb#8
  def initialize(values = T.unsafe(nil)); end

  # source://postmark//lib/postmark/bounce.rb#37
  def activate; end

  # Returns the value of attribute bounced_at.
  #
  # source://postmark//lib/postmark/bounce.rb#6
  def bounced_at; end

  # @return [Boolean]
  #
  # source://postmark//lib/postmark/bounce.rb#29
  def can_activate?; end

  # Returns the value of attribute description.
  #
  # source://postmark//lib/postmark/bounce.rb#6
  def description; end

  # Returns the value of attribute details.
  #
  # source://postmark//lib/postmark/bounce.rb#6
  def details; end

  # source://postmark//lib/postmark/bounce.rb#33
  def dump; end

  # @return [Boolean]
  #
  # source://postmark//lib/postmark/bounce.rb#41
  def dump_available?; end

  # Returns the value of attribute email.
  #
  # source://postmark//lib/postmark/bounce.rb#6
  def email; end

  # Returns the value of attribute id.
  #
  # source://postmark//lib/postmark/bounce.rb#6
  def id; end

  # @return [Boolean]
  #
  # source://postmark//lib/postmark/bounce.rb#25
  def inactive?; end

  # Returns the value of attribute message_id.
  #
  # source://postmark//lib/postmark/bounce.rb#6
  def message_id; end

  # Returns the value of attribute name.
  #
  # source://postmark//lib/postmark/bounce.rb#6
  def name; end

  # Returns the value of attribute server_id.
  #
  # source://postmark//lib/postmark/bounce.rb#6
  def server_id; end

  # Returns the value of attribute subject.
  #
  # source://postmark//lib/postmark/bounce.rb#6
  def subject; end

  # Returns the value of attribute tag.
  #
  # source://postmark//lib/postmark/bounce.rb#6
  def tag; end

  # Returns the value of attribute type.
  #
  # source://postmark//lib/postmark/bounce.rb#6
  def type; end

  class << self
    # source://postmark//lib/postmark/bounce.rb#50
    def all(options = T.unsafe(nil)); end

    # source://postmark//lib/postmark/bounce.rb#46
    def find(id); end
  end
end

# source://postmark//lib/postmark/client.rb#4
class Postmark::Client
  # @return [Client] a new instance of Client
  #
  # source://postmark//lib/postmark/client.rb#7
  def initialize(api_token, options = T.unsafe(nil)); end

  # source://postmark//lib/postmark/client.rb#13
  def api_key=(api_token); end

  # source://postmark//lib/postmark/client.rb#13
  def api_token=(api_token); end

  # source://postmark//lib/postmark/client.rb#18
  def find_each(path, name, options = T.unsafe(nil)); end

  # Returns the value of attribute http_client.
  #
  # source://postmark//lib/postmark/client.rb#5
  def http_client; end

  # Returns the value of attribute max_retries.
  #
  # source://postmark//lib/postmark/client.rb#5
  def max_retries; end

  protected

  # source://postmark//lib/postmark/client.rb#89
  def format_batch_response(response, name); end

  # source://postmark//lib/postmark/client.rb#63
  def format_response(response, options = T.unsafe(nil)); end

  # source://postmark//lib/postmark/client.rb#76
  def get_resource_count(path, options = T.unsafe(nil)); end

  # source://postmark//lib/postmark/client.rb#82
  def load_batch(path, name, options); end

  # source://postmark//lib/postmark/client.rb#53
  def serialize(data); end

  # source://postmark//lib/postmark/client.rb#57
  def take_response_of; end

  # source://postmark//lib/postmark/client.rb#38
  def with_retries; end
end

# source://postmark//lib/postmark/deprecations.rb#8
module Postmark::Deprecations
  class << self
    # source://postmark//lib/postmark/deprecations.rb#31
    def add_constants(mappings); end

    # source://postmark//lib/postmark/deprecations.rb#23
    def behavior; end

    # source://postmark//lib/postmark/deprecations.rb#27
    def behavior=(behavior); end

    # source://postmark//lib/postmark/deprecations.rb#19
    def deprecated_constants; end

    # source://postmark//lib/postmark/deprecations.rb#15
    def report(message); end
  end
end

# source://postmark//lib/postmark/deprecations.rb#9
Postmark::Deprecations::DEFAULT_BEHAVIORS = T.let(T.unsafe(nil), Hash)

# source://postmark//lib/postmark/error.rb#4
class Postmark::Error < ::StandardError; end

# source://postmark//lib/postmark.rb#28
Postmark::HEADERS = T.let(T.unsafe(nil), Hash)

# source://postmark//lib/postmark/helpers/hash_helper.rb#2
module Postmark::HashHelper
  extend ::Postmark::HashHelper

  # source://postmark//lib/postmark/helpers/hash_helper.rb#6
  def to_postmark(object, options = T.unsafe(nil)); end

  # source://postmark//lib/postmark/helpers/hash_helper.rb#23
  def to_ruby(object, options = T.unsafe(nil)); end

  private

  # source://postmark//lib/postmark/helpers/hash_helper.rb#48
  def enhance_with_compatibility_warning(hash); end
end

# source://postmark//lib/postmark/http_client.rb#5
class Postmark::HttpClient
  # @return [HttpClient] a new instance of HttpClient
  #
  # source://postmark//lib/postmark/http_client.rb#24
  def initialize(api_token, options = T.unsafe(nil)); end

  # Returns the value of attribute api_token.
  #
  # source://postmark//lib/postmark/http_client.rb#6
  def api_key; end

  # Sets the attribute api_token
  #
  # @param value the value to set the attribute api_token to.
  #
  # source://postmark//lib/postmark/http_client.rb#6
  def api_key=(_arg0); end

  # Returns the value of attribute api_token.
  #
  # source://postmark//lib/postmark/http_client.rb#6
  def api_token; end

  # Sets the attribute api_token
  #
  # @param value the value to set the attribute api_token to.
  #
  # source://postmark//lib/postmark/http_client.rb#6
  def api_token=(_arg0); end

  # Returns the value of attribute auth_header_name.
  #
  # source://postmark//lib/postmark/http_client.rb#7
  def auth_header_name; end

  # source://postmark//lib/postmark/http_client.rb#47
  def delete(path, query = T.unsafe(nil)); end

  # source://postmark//lib/postmark/http_client.rb#43
  def get(path, query = T.unsafe(nil)); end

  # Returns the value of attribute host.
  #
  # source://postmark//lib/postmark/http_client.rb#7
  def host; end

  # Returns the value of attribute http.
  #
  # source://postmark//lib/postmark/http_client.rb#7
  def http; end

  # Returns the value of attribute http_open_timeout.
  #
  # source://postmark//lib/postmark/http_client.rb#7
  def http_open_timeout; end

  # Returns the value of attribute http_read_timeout.
  #
  # source://postmark//lib/postmark/http_client.rb#7
  def http_read_timeout; end

  # Returns the value of attribute http_ssl_version.
  #
  # source://postmark//lib/postmark/http_client.rb#7
  def http_ssl_version; end

  # source://postmark//lib/postmark/http_client.rb#39
  def patch(path, data = T.unsafe(nil)); end

  # Returns the value of attribute path_prefix.
  #
  # source://postmark//lib/postmark/http_client.rb#7
  def path_prefix; end

  # Returns the value of attribute port.
  #
  # source://postmark//lib/postmark/http_client.rb#7
  def port; end

  # source://postmark//lib/postmark/http_client.rb#31
  def post(path, data = T.unsafe(nil)); end

  # source://postmark//lib/postmark/http_client.rb#51
  def protocol; end

  # Returns the value of attribute proxy_host.
  #
  # source://postmark//lib/postmark/http_client.rb#7
  def proxy_host; end

  # Returns the value of attribute proxy_pass.
  #
  # source://postmark//lib/postmark/http_client.rb#7
  def proxy_pass; end

  # Returns the value of attribute proxy_port.
  #
  # source://postmark//lib/postmark/http_client.rb#7
  def proxy_port; end

  # Returns the value of attribute proxy_user.
  #
  # source://postmark//lib/postmark/http_client.rb#7
  def proxy_user; end

  # source://postmark//lib/postmark/http_client.rb#35
  def put(path, data = T.unsafe(nil)); end

  # Returns the value of attribute secure.
  #
  # source://postmark//lib/postmark/http_client.rb#7
  def secure; end

  protected

  # source://postmark//lib/postmark/http_client.rb#57
  def apply_options(options = T.unsafe(nil)); end

  # source://postmark//lib/postmark/http_client.rb#100
  def build_http; end

  # source://postmark//lib/postmark/http_client.rb#90
  def do_request; end

  # source://postmark//lib/postmark/http_client.rb#74
  def handle_response(response); end

  # source://postmark//lib/postmark/http_client.rb#82
  def headers; end

  # source://postmark//lib/postmark/http_client.rb#65
  def to_query_string(hash); end

  # source://postmark//lib/postmark/http_client.rb#70
  def url; end

  # source://postmark//lib/postmark/http_client.rb#86
  def url_path(path); end
end

# source://postmark//lib/postmark/http_client.rb#15
Postmark::HttpClient::DEFAULTS = T.let(T.unsafe(nil), Hash)

# source://postmark//lib/postmark/error.rb#6
class Postmark::HttpClientError < ::Postmark::Error
  # @return [Boolean]
  #
  # source://postmark//lib/postmark/error.rb#7
  def retry?; end
end

# source://postmark//lib/postmark/error.rb#12
class Postmark::HttpServerError < ::Postmark::Error
  # @return [HttpServerError] a new instance of HttpServerError
  #
  # source://postmark//lib/postmark/error.rb#32
  def initialize(status_code = T.unsafe(nil), body = T.unsafe(nil), parsed_body = T.unsafe(nil)); end

  # Returns the value of attribute body.
  #
  # source://postmark//lib/postmark/error.rb#13
  def body; end

  # Sets the attribute body
  #
  # @param value the value to set the attribute body to.
  #
  # source://postmark//lib/postmark/error.rb#13
  def body=(_arg0); end

  # Returns the value of attribute parsed_body.
  #
  # source://postmark//lib/postmark/error.rb#13
  def full_response; end

  # Returns the value of attribute parsed_body.
  #
  # source://postmark//lib/postmark/error.rb#13
  def parsed_body; end

  # Sets the attribute parsed_body
  #
  # @param value the value to set the attribute parsed_body to.
  #
  # source://postmark//lib/postmark/error.rb#13
  def parsed_body=(_arg0); end

  # @return [Boolean]
  #
  # source://postmark//lib/postmark/error.rb#41
  def retry?; end

  # Returns the value of attribute status_code.
  #
  # source://postmark//lib/postmark/error.rb#13
  def status_code; end

  # Sets the attribute status_code
  #
  # @param value the value to set the attribute status_code to.
  #
  # source://postmark//lib/postmark/error.rb#13
  def status_code=(_arg0); end

  class << self
    # source://postmark//lib/postmark/error.rb#17
    def build(status_code, body); end
  end
end

# source://postmark//lib/postmark/error.rb#77
class Postmark::InactiveRecipientError < ::Postmark::ApiInputError
  # @return [InactiveRecipientError] a new instance of InactiveRecipientError
  #
  # source://postmark//lib/postmark/error.rb#95
  def initialize(*args); end

  # Returns the value of attribute recipients.
  #
  # source://postmark//lib/postmark/error.rb#78
  def recipients; end

  private

  # source://postmark//lib/postmark/error.rb#102
  def parse_recipients; end

  class << self
    # source://postmark//lib/postmark/error.rb#85
    def parse_recipients(message); end
  end
end

# source://postmark//lib/postmark/error.rb#80
Postmark::InactiveRecipientError::PATTERNS = T.let(T.unsafe(nil), Array)

# source://postmark//lib/postmark/inbound.rb#2
module Postmark::Inbound
  extend ::Postmark::Inbound

  # source://postmark//lib/postmark/inbound.rb#5
  def to_ruby_hash(inbound); end
end

# source://postmark//lib/postmark/inflector.rb#2
module Postmark::Inflector
  extend ::Postmark::Inflector

  # source://postmark//lib/postmark/inflector.rb#14
  def camel_case_regexp; end

  # source://postmark//lib/postmark/inflector.rb#6
  def to_postmark(name); end

  # source://postmark//lib/postmark/inflector.rb#10
  def to_ruby(name); end

  protected

  # source://postmark//lib/postmark/inflector.rb#20
  def capitalize_first_letter(str); end
end

# source://postmark//lib/postmark/error.rb#127
class Postmark::InternalServerError < ::Postmark::HttpServerError; end

# source://postmark//lib/postmark/error.rb#126
class Postmark::InvalidApiKeyError < ::Postmark::HttpServerError; end

# source://postmark//lib/postmark/error.rb#75
class Postmark::InvalidEmailRequestError < ::Postmark::ApiInputError; end

# source://postmark//lib/postmark/error.rb#109
class Postmark::InvalidTemplateError < ::Postmark::Error
  # @return [InvalidTemplateError] a new instance of InvalidTemplateError
  #
  # source://postmark//lib/postmark/error.rb#112
  def initialize(response); end

  # Returns the value of attribute postmark_response.
  #
  # source://postmark//lib/postmark/error.rb#110
  def postmark_response; end
end

# source://postmark//lib/postmark/json.rb#2
module Postmark::Json
  class << self
    # source://postmark//lib/postmark/json.rb#10
    def decode(data); end

    # source://postmark//lib/postmark/json.rb#5
    def encode(data); end

    private

    # source://postmark//lib/postmark/json.rb#16
    def json_parser; end
  end
end

# source://postmark//lib/postmark/error.rb#124
class Postmark::MailAdapterError < ::Postmark::Error; end

# source://postmark//lib/postmark/mail_message_converter.rb#3
class Postmark::MailMessageConverter
  # @return [MailMessageConverter] a new instance of MailMessageConverter
  #
  # source://postmark//lib/postmark/mail_message_converter.rb#5
  def initialize(message); end

  # source://postmark//lib/postmark/mail_message_converter.rb#9
  def run; end

  private

  # source://postmark//lib/postmark/mail_message_converter.rb#60
  def cast_to_bool(val); end

  # source://postmark//lib/postmark/mail_message_converter.rb#52
  def content_part; end

  # source://postmark//lib/postmark/mail_message_converter.rb#15
  def convert; end

  # source://postmark//lib/postmark/mail_message_converter.rb#19
  def delete_blank_fields(message_hash); end

  # source://postmark//lib/postmark/mail_message_converter.rb#23
  def headers_part; end

  # source://postmark//lib/postmark/mail_message_converter.rb#42
  def pick_fields(message_hash, templated = T.unsafe(nil)); end
end

# source://postmark//lib/postmark/helpers/message_helper.rb#2
module Postmark::MessageHelper
  extend ::Postmark::MessageHelper

  # source://postmark//lib/postmark/helpers/message_helper.rb#34
  def attachments_to_postmark(attachments); end

  # source://postmark//lib/postmark/helpers/message_helper.rb#48
  def encode_in_base64(data); end

  # source://postmark//lib/postmark/helpers/message_helper.rb#28
  def headers_to_postmark(headers); end

  # source://postmark//lib/postmark/helpers/message_helper.rb#6
  def to_postmark(message = T.unsafe(nil)); end

  protected

  # From ActiveSupport (Array#wrap)
  #
  # source://postmark//lib/postmark/helpers/message_helper.rb#55
  def wrap_in_array(object); end
end

# source://postmark//lib/postmark.rb#22
module Postmark::ResponseParsers; end

# source://postmark//lib/postmark/response_parsers/active_support.rb#4
module Postmark::ResponseParsers::ActiveSupport
  class << self
    # source://postmark//lib/postmark/response_parsers/active_support.rb#5
    def decode(data); end
  end
end

# source://postmark//lib/postmark/response_parsers/json.rb#4
module Postmark::ResponseParsers::Json
  class << self
    # source://postmark//lib/postmark/response_parsers/json.rb#5
    def decode(data); end
  end
end

# source://postmark//lib/postmark/error.rb#118
class Postmark::TimeoutError < ::Postmark::Error
  # @return [Boolean]
  #
  # source://postmark//lib/postmark/error.rb#119
  def retry?; end
end

# source://postmark//lib/postmark/error.rb#128
class Postmark::UnexpectedHttpResponseError < ::Postmark::HttpServerError; end

# source://postmark//lib/postmark/error.rb#125
class Postmark::UnknownMessageType < ::Postmark::Error; end

# source://postmark//lib/postmark/version.rb#2
Postmark::VERSION = T.let(T.unsafe(nil), String)
